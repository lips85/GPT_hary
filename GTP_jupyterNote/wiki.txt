Wikipedia Result

CVE-2024-3094는 2024년 3월 29일 소프트웨어 개발자인 안드레스 프런드가 발견한 2024년 2월 liblzma 라이브러리 내 Linux 유틸리티 xz (버전 5.6.0 및 5.6.1)에 악의적으로 삽입된 백도어이다. xz는 대부분의 리눅스 배포판에 기본적으로 설치되어 있지만 백도어는 x86-64 아키텍처에서 실행되는 데비안 및 RPM 기반 시스템만을 표적으로 삼았다. 발견 당시 백도어가 포함된 소프트웨어 버전은 아직 널리 배포되지 않은 상태였다.
백도어는 영향을 받는 리눅스 시스템에서 특정 Ed448 개인 키 원격 코드 실행를 보유한 공격자에게 원격 코드 실행 권한을 제공한다. 이 문제에는 소프트웨어 취약점에 부여되는 점수 중 가장 높은 점수인 10.0의 CVSS 점수가 할당되었다.


== 배경 ==
마이크로소프트 직원이자 PostgreSQL 개발자인 안드레스 프런드는 데비안 Sid의 성능 회귀에 대해 조사한 후 백도어를 보고했다. 프런드는 SSH 연결로 인해 예기치 않게 많은 양의 CPU 사용량이 발생하고 메모리 디버깅 도구인 Valgrind에서 오류가 발생한다는 사실을 발견했다. 프런드는 자신이 발견한 내용을 오픈월 프로젝트의 오픈 소스 보안 메일링 리스트에 보고했으며, 이는 다양한 소프트웨어 공급업체의 관심을 끌었다. 백도어는 여러 단계로 실행되도록 구성된 난독화를 통해 숨겨져 있었다.
백도어가 삽입된 버전이 운영 체제에 설치되면 systemd 라이브러리를 남용하여 오픈SSH의 SSH 서버 데몬의 동작을 변경하여 공격자가 인증된 관리자와 동일한 수준의 액세스 권한을 얻을 수 있게 만든다. 레드햇의 분석에 따르면 백도어는 악의적인 행위자가 sshd 인증을 깨고 원격으로 전체 시스템에 대한 무단 액세스를 얻을 수 있도록 만들어준다.
후속 조사에 따르면 XZ Utils 프로젝트에 백도어를 삽입하려는 시도는 Jia Tan이라는 이름과 JiaT75라는 아이디를 사용하는 사용자가 프로젝트 내에서 신뢰받는 위치에 접근하기 위해 약 3년 동안 노력한 결과였다. 창립자와 유지관리자가 다른 새로운 참가자에게 프로젝트 제어권을 넘겨야 한다는 압력을 받은 후 Jia Tan은 XZ Utils의 공동 유지관리자 지위를 얻었고 백도어가 삽입된 5.6.0 버전과 5.6.1 버전을 배포할 수 있었다. 백도어는 그 정교함과 공격자가 신뢰를 얻기 위해 오랜 시간 동안 높은 수준의 운영 보안을 실천했다는 점에서 주목받았다. 미국의 보안 연구원인 Dave Aitel은 이것이 러시아 대외정보국의 지시를 받으며 활동하는 것으로 여겨지는 지능형 지속 공격단체인 APT29의 행동 양식과 유사하다고 말했다.


== 작동 방식 ==
해당 악성 코드는 XZ Utils 소프트웨어 패키지의 5.6.0 및 5.6.1 릴리스에 삽입된 것으로 알려져 있다. 제3자의 패치가 적용되지 않은 SSH 서버는 익스플로잇은 작동되지 않으나, 대부분의 리눅스 배포판에 적용된 패치로 인해 잠재적으로 악의적인 행위자가 SSHD 인증을 깨고 원격으로 전체 시스템에 대한 무단 액세스를 얻을 수 있다. 악성 코드 작동 체계는 악성 바이너리 코드가 포함된 두 개의 압축 테스트 파일로 구성되어 있다. 이러한 파일들은 glibc IFUNC 메커니즘을 사용하여 RSA_public_decrypt라는 오픈SSH 의 기존 함수를 악성코드로 대체하며, 깃 저장소에서 존재하지만 압축을 해제하여 프로그램에 삽입하지 않는 한 작동하지 않는다. 오픈SSH는 일반적으로 liblzma를 로드하지 않지만, 여러 Linux 배포판에서 사용하는 패치로 인해 libsystemd가 로드되고, 이는 다시 lzma를 로드한다. 깃허브에 업로드된 릴리스 tar 파일에 포함된 수정된 버전의 build-to-host.m4 은 liblzma에 백도어 주입을 수행하는 스크립트를 압축 해제시킨다. 이 수정된 m4 파일은 git 저장소에 존재하지 않으며, git과 별도로 관리자가 릴리스한 tar 파일에서만 존재했다. 스크립트는 시스템이 glibc 및 GCC를 사용하고 dpkg 또는 rpm 기반 x86-64 Linux 시스템에서만 백도어 주입을 수행하는 것으로 나타났다.


== 반응 ==


=== 백도어 대응 패치 ===
사이버 보안 및 인프라를 담당하는 미국 연방 기관인 사이버 보안 및 인프라 보안국은 영향을 받는 장치가 백도어가 삽입되지 않은 이전 버전으로 롤백해야 한다는 보안 권고를 발표했다. 레드햇, 수세 및 데비안 을 포함한 리눅스 소프트웨어 공급업체들은 이 권고에 따라 영향을 받는 패키지에 대해 업데이트를 취소하고 이전 버전으로 되돌렸다. 깃허브는 xz 소스 코드 저장소 미러를 비활성화시켰다.


=== 업계 반응 ===
센티널원의 알렉스 스타모스는 "이것은 모든 소프트웨어 제품에 설치된 백도어 중 가장 광범위하고 효과적인 백도어일 수 있었다"라고 했으며 백도어가 탐지되지 않은 채로 남아 있었다면 "백도어 제작자에게 SSH를 실행하는 전 세계 수억 대의 컴퓨터에 대한 마스터 키를 제공했을 것"이라고 말했다. 또한 이 사건은 사이버 인프라의 중요한 부분을 무급 자원봉사자에게 의존시키는 문제에 대한 논의를 촉발시켰다.


== 각주 ==


== 외부 링크 ==
XZ Utils 백도어 - 공식 웹사이트
안드레스 프런드가 오픈월 oss-security 메일링 리스트에 취약점에 대해 보고한 메일 

XZ Utils (이전 LZMA Utils )는 lzma 및 xz 프로그램을 포함해 유닉스 계열 운영 체제 및 마이크로소프트 윈도우 버전 5.0 이상에서 실행할 수 있는 자유 소프트웨어 명령줄 비손실 압축 소프트웨어 모음이다. 압축/압축 풀기에는 Lempel–Ziv–Markov 체인 알고리즘 (LZMA)이 사용된다. XZ Utils는 Igor Pavlov 의 LZMA- SDK를 유닉스 환경에 문제없이 실행되도록 이식한 버전으로 시작되었다
2024년 3월 29일, XZ Utils의 5.6.0 및 5.6.1 배포판에서 백도어가 발견되었다.


== 특징 ==
대부분의 경우 xz는 gzip 및 bzip2 와 같은 기능을 가진 다른 소프트웨어보다 더 높은 압축률을 달성한다. 압축 해제 속도는 bzip2보다 높지만 gzip보다 느리다. 압축은 gzip보다 훨씬 느릴 수 있고 높은 압축 수준의 경우 bzip2보다 느릴 수 있으며 압축 파일을 여러 번 사용할 때 가장 유용하다.
XZ Utils는 두 가지 주요 구성 요소로 구성되어있다.

명령줄 압축 및 압축 해제 소프트웨어 xz
Zlib와 유사한 API를 가진 소프트웨어 라이브러리 liblzma
lzma ( xz --format=lzma 의 경우), unxz ( xz --decompress 의 경우 gunzip 과 유사) 및 xzcat ( unxz --stdout 의 경우 zcat 과 유사)와 같은 다양한 명령 단축키가 존재한다.
XZ Utils는 xz 및 lzma 파일 형식을 모두 압축하고 압축을 풀 수 있지만 LZMA 형식은 이제 레거시이므로  XZ Utils는 기본적으로 xz로 압축하도록 설정되어있다.


== xz 형식 ==
xz 형식은 필터 전처리를 허용하여 lzma를 개선한 압축 파일 형식으로,  7z 필터는 LZMA SDK를 통해 퍼블릭 도메인으로 공개되어 있는 7z 필터와 유사하다.


== 개발 ==
XZ Utils의 개발은 마이크 케즈너가 이끄는 한때 슬랙웨어 기반 리눅스 배포판을 관리했던 소규모 개발자 그룹인  Tukaani 프로젝트 내에서 이루어졌다.
xz 및 liblzma의 모든 소스 코드는 퍼블릭 도메인으로 공개되어있으나, 몇몇 스크립트에는 GNU 일반 공중 사용 허가서 또는 GNU 약소 일반 공중 사용 허가서가 적용되어있다.
XZ Utils 소프트웨어와 함께 배포되는 GNU 일반 공중 사용 허가서가 적용된 스크립트 및 소스의 전체 목록은 다음과 같다:

libc 함수인 getopt ( GNU LGPL v2.1 )의 선택적 구현
pthread 감지를 위한 m4 스크립트( GNU GPL v3 )
일부 중요하지 않은 래퍼 스크립트(xzgrep 등)( GNU GPL v2 )
그리고 빌드 시스템과 통합되지 않은 예제 프로그램 scanlzma
LGPL getopt 구현이 통합한 것을 사용하지 않는 한  xz 및 liblzma 바이너리는 퍼블릭 도메인으로 사용할 수 있다
바이너리는 FreeBSD, NetBSD, 리눅스 시스템, 마이크로소프트 윈도우 및 프리도스에서 사용할 수 있다. 페도라, 슬랙웨어, 우분투 및 데비안을 포함한 다수의 리눅스 배포판에서는 소프트웨어 패키지를 압축하기 위해 xz를 사용하고 있다. 아치 리눅스는 이전에 xz를 사용하여 패키지를 압축했지만 2019년 12월 27일 현재 패키지는 Zstandard를 사용해 압축하고 있다. 페도라 리눅스 또한 페도라 리눅스 31 버전부터 RPM 패키지를 Zstandard로 압축하는 방식으로 전환했다 GNU FTP 아카이브도 xz를 사용하고 있다.


== 공급망 공격 ==
2024년 3월 29일, Openwall의 oss-security 메일링 리스트에 liblzma 코드에 취약점이 삽입되었다는 것을 알리는 스레드가 게시되었다. 스레드 작성자인 Andres Freund는 sshd가 많은 양의 CPU를 사용하고 있다는 것을 알고 원인을 찾던 중 tar 파일의 구성 스크립트 추가를 통해 백도어 설정 코드 삽입하는 압축 테스트 파일을 찾아냈다.   이 취약점의 CVE ID는 레드햇이 발행한 CVE-2024-3094이며, 취약점 위험 지수는 10점 만점에 10점이다.
해당 악성코드가 포함된 버전은 5.6.0, 5.6.1인 것으로 알려져 있다. SSH 서버의 특정 서드 파티 패치를 사용하지 않는 한 취약점은 작동되지 않지만, 아닐 경우 잠재적으로 악의적인 행위자가 sshd 인증을 깨고 원격으로 전체 시스템에 대한 무단 액세스 권한을 얻을 수 있다. 침투 메커니즘은 악성 바이너리 코드가 포함된 두 개의 압축 테스트 파일로 구성되어 있으며, 파일들은 git 저장소에 공개되어 있지만 프로그램에 삽입하지 않는 한 휴면 상태로 유지된다. 이 코드는 glibc IFUNC 기능을 사용하여 RSA_public_decrypt 라는 OpenSSH의 기존 함수를 악성코드 버전으로 대체한다. OpenSSH는 일반적으로 liblzma를 로드하지 않지만, 여러 리눅스 배포판에서 사용하는 일반적인 서드 파티 패치로 인해 libsystemd가 로드되고, 이를 통해 lzma가 로드된다.깃허브에 업로드된 릴리스 버전 소스코드 tar에는 liblzma에 백도어 삽입을 수행하는 스크립트인  build-to-host.m4 의 수정된 버전이 포함되었다. 이 수정된 m4 파일은 git 저장소에 없었지만, git과 별도로 관리자가 릴리스한 tar 파일에만 존재했다. 스크립트는 시스템이 glibc 및 GCC를 사용하고 dpkg 또는 rpm을 통해 구축되는 x86-64 리눅스 시스템에만 취약점을 삽입하는 것으로 나타났다. 깃허브는 공급망 공격으로 인해 XZ 저장소를 서비스 약관 위반을 이유로 코드를 사이트에서 내렸다. 백도어는 xz 프로젝트의 관리자인 "JiaT75"에 의해 추가되었지만 이 백도어가 관리자가 의도적으로 삽입한 것인지, 아니면 관리자 계정이 해킹 된 것인지는 현재 확실하지 않다.
영향을 받는 리눅스 배포판 목록에는 데비안 불안정 및 테스트 버전, Fedora Rawhide, 칼리 리눅스, 및 오픈수세 텀블위드 및 Zorin OS 등이 있다. 안정적인 릴리스 업데이트 모델을 따르는 대부분의 리눅스 배포판은 이전 버전의 xz를 탑재하고 있었기 때문에 영향을 받지 않았다. Arch 리눅스는 사용자에게 즉시 업데이트하라는 권고를 발표했지만 Arch의 OpenSSH 패키지에는 백도어에 실행되는 데 필요한 서드파티 패치가 포함되어 있지 않다는 점도 언급했다.  현재 지원되는 모든 FreeBSD 릴리스에는 영향을 받는 릴리스보다 이전 버전의 xz가 포함되어 있었으며, 공격은 리눅스의 glibc를 대상으로 하기 때문에 FreeBSD는 이 공격의 영향을 받지 않는다.


== 각주 ==


== 외부 링크 ==
Official Website - 웨이백 머신 (보관됨 2024-03-25)
SourceForge project page 

